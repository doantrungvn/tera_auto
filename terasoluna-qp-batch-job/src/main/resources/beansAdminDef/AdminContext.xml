<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- アノテーションによる設定 -->
    <context:annotation-config />

    <!-- フレームワーク設定ファイルの読み込み -->
    <context:property-placeholder location="appprops/batch.properties" order="1" ignore-unresolvable="true" />

    <!-- メッセージアクセサ -->
    <bean id="msgAcc" class="jp.terasoluna.fw.batch.message.MessageAccessorImpl" />
    <bean class="jp.terasoluna.fw.batch.util.MessageUtil">
        <property name="messageAccessor" ref="msgAcc" />
    </bean>

    <!-- メッセージプロパティファイル設定 -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames" value="application-messages" />
    </bean>

    <!-- ジョブ個別例外ハンドラの解決クラス -->
    <bean id="blogicExceptionHandlerResolver"
        class="jp.terasoluna.fw.batch.exception.handler.BLogicExceptionHandlerResolverImpl" />

    <!-- ジョブBean定義ファイルの解決クラス -->
    <bean id="blogicApplicationContextResolver"
        class="jp.terasoluna.fw.batch.executor.ApplicationContextResolverImpl">
        <description>キャッシュ機能なしのジョブBean定義ファイルの解決クラス。共通コンテキストを業務コンテキストの親とする場合、
            commonContextClassPathでBean定義ファイルのクラスパスを記述する。 (複数指定時はカンマ区切り)
        </description>
        <property name="commonContextClassPath"
            value="classpath:beansDef/commonContext.xml, classpath:beansDef/dataSource.xml" />
    </bean>

    <!-- ジョブBean定義ファイルの解決クラス (キャッシュ機能つき)
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean
                    class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <description>valueの値はbusinessContext固定とする。</description>
                    <property name="name" value="businessContext" />
                </bean>
            </set>
        </property>
    </bean>
    <bean id="blogicApplicationContextResolver"
        class="jp.terasoluna.fw.batch.executor.CacheableApplicationContextResolverImpl">
        <description>CacheManagerを使用したキャッシュ機能つきのジョブBean定義ファイルの解決クラス。共通コンテキストを業務コンテキストの親とする場合、
            commonContextClassPathでBean定義ファイルのクラスパスを記述する。 (複数指定時はカンマ区切り)
        </description>
        <property name="commonContextClassPath"
            value="classpath:beansDef/commonContext.xml, classpath:beansDef/dataSource.xml" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>
    -->

    <!-- ビジネスロジックの解決クラス -->
    <bean id="blogicResolver" class="jp.terasoluna.fw.batch.blogic.BLogicResolverImpl" />

    <!-- ビジネスロジックの実行クラス -->
    <bean id="blogicExecutor" class="jp.terasoluna.fw.batch.executor.BLogicExecutorImpl" />

    <!-- ジョブ起動引数をビジネスロジックの入力パラメータに変換するクラス -->
    <bean id="blogicParamConverter" class="jp.terasoluna.fw.batch.blogic.vo.BLogicParamConverterImpl">
        <constructor-arg index="0">
            <!-- マッパ― -->
            <bean id="blogicParamMapper" class="org.dozer.spring.DozerBeanMapperFactoryBean" />
        </constructor-arg>
    </bean>

    <!-- 同期型ジョブの操作クラス -->
    <bean id="syncJobOperator"
        class="jp.terasoluna.fw.batch.executor.controller.SyncJobOperatorImpl">
        <constructor-arg index="0" ref="blogicApplicationContextResolver" />
        <constructor-arg index="1" ref="blogicParamConverter" />
        <constructor-arg index="2" ref="blogicExceptionHandlerResolver" />
        <constructor-arg index="3" ref="blogicResolver" />
        <constructor-arg index="4" ref="blogicExecutor" />
    </bean>

    <!-- 非同期型ジョブ実行クラス -->
    <bean id="asyncJobWorker"
        class="jp.terasoluna.fw.batch.executor.AsyncJobWorkerImpl">
        <constructor-arg index="0" ref="blogicResolver" />
        <constructor-arg index="1" ref="blogicExceptionHandlerResolver" />
        <constructor-arg index="2" ref="blogicApplicationContextResolver" />
        <constructor-arg index="3" ref="jobControlFinder" />
        <constructor-arg index="4" ref="blogicParamConverter" />
        <constructor-arg index="5" ref="blogicExecutor" />
        <constructor-arg index="6" ref="jobStatusChanger" />
    </bean>

    <!-- 非同期型ジョブ実行用スレッドプールタスクエグゼキュータ -->
    <task:executor id="batchTaskExecutor" pool-size="10-10" queue-capacity="10" />

    <!-- 非同期型ジョブの起動クラス -->
    <bean id="asyncJobLauncher"
        class="jp.terasoluna.fw.batch.executor.controller.AsyncJobLauncherImpl">
        <constructor-arg index="0" ref="batchTaskExecutor" />
        <constructor-arg index="1" ref="asyncJobWorker" />
    </bean>

    <!-- 非同期型ジョブ実行機能の停止クラス -->
    <bean id="asyncBatchStopper" class="jp.terasoluna.fw.batch.executor.controller.EndFileStopper" />

    <!-- 非同期型ジョブの操作クラス -->
    <bean id="asyncJobOperator"
        class="jp.terasoluna.fw.batch.executor.controller.AsyncJobOperatorImpl">
        <constructor-arg index="0" ref="jobControlFinder" />
        <constructor-arg index="1" ref="asyncJobLauncher" />
        <constructor-arg index="2" ref="asyncBatchStopper" />
    </bean>

</beans>