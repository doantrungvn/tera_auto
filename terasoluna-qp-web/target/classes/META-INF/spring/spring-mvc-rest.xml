<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Load properties files for placeholder. -->
    <context:property-placeholder
        location="classpath*:/META-INF/spring/*.properties" />

    <!-- Scan & register components of RESTful Web Service. -->
    <context:component-scan base-package="org.terasoluna.qp.app.webservice" />

    <!-- Register components of Spring MVC. -->
    <bean id="jsonMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper">
            <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
                <!-- (2) -->
                <property name="dateFormat">
                    <bean class="com.fasterxml.jackson.databind.util.StdDateFormat" />
                </property>
            </bean>
        </property>
    </bean>
    
    <bean id="xmlMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
    	<property name="packagesToScan" value="org.terasoluna.qp.app.webservice" />
	</bean>

	<bean id="xmlMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	     <property name="marshaller" ref="xmlMarshaller" />
	     <property name="unmarshaller" ref="xmlMarshaller" />
	 </bean>
	 
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean
                class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
                <property name="maxPageSize" value="50" />
                <property name="oneIndexedParameters" value="true" />
            </bean>
        </mvc:argument-resolvers>
        <mvc:message-converters register-defaults="false">
            <ref bean="jsonMessageConverter" />
            <ref bean="xmlMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Register components of interceptor. -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean
                class="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- Register components of AOP. -->
    <bean id="handlerExceptionResolverLoggingInterceptor"
        class="org.terasoluna.gfw.web.exception.HandlerExceptionResolverLoggingInterceptor">
        <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>
    <aop:config>
        <aop:advisor advice-ref="handlerExceptionResolverLoggingInterceptor"
            pointcut="execution(* org.springframework.web.servlet.HandlerExceptionResolver.resolveException(..))" />
    </aop:config>  
</beans>